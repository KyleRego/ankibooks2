<style>
#preview h1, h2, h3, h4, h5, h6 {
  font-weight: 500;
}
#preview h1 {
  font-size: 2.5rem;
}
#preview h2 {
  font-size: 2.25rem;
}
#preview h3 {
  font-size: 2rem;
}
#preview h4 {
  font-size: 1.75rem;
}
#preview h5 {
  font-size: 1.5rem;
}
#preview h6 {
  font-size: 1.25rem;
}
#preview .ankiNote {
  font-weight: 350;
}
</style>


<div class="md:grid md:grid-cols-2 md:h-screen">
  <section>
  <h1 class="p-4 text-2xl"><%= title %></h1>
    <%= form_with model: [@book, @article], class: "px-4" do |f| %>

      <% if @article.errors.any? %>
        <div>
          This form contains <%= pluralize(@article.errors.count, "error") %>.
          <ul>
            <% @article.errors.full_messages.each do |msg| %>
              <li><%= msg %></li>
            <% end %>
          </ul>
        </div>
      <% end %>


      <div class="flex justify-between items-center">
        <div>
          <%= f.label :name, class: "block" %>
          <%= f.text_field :name, class: "block" %>
        </div>

        <button id="update-preview-button" class="p-2 bg-blue-600 text-white rounded-md shadow-md hover:bg-blue-700 hover:shadow-lg">Update Preview</button>
      </div>
      

      <%= f.label :content, class: "block" %>

      <div class="bg-white flex justify-start border-b">
        <button id="header-1-button" class="hover:bg-gray-200 p-4">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-type-h1" viewBox="0 0 16 16">
            <path d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.169 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"/>
          </svg>
        </button>

        <button id="header-2-button" class="hover:bg-gray-200 p-4">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-type-h2" viewBox="0 0 16 16">
            <path d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.166-2.966 2.74v.049h1.223z"/>
          </svg>
        </button>

        <button id="header-3-button" class="hover:bg-gray-200 p-4">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-type-h3" viewBox="0 0 16 16">
            <path d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.16H9.108c.069 1.167 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"/>
          </svg>
        </button>

        <button id="italicize-button" class="hover:bg-gray-200 p-4">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-type-italic" viewBox="0 0 16 16">
            <path d="M7.991 11.674 9.53 4.455c.123-.595.246-.71 1.347-.807l.11-.52H7.211l-.11.52c1.06.096 1.128.212 1.005.807L6.57 11.674c-.123.595-.246.71-1.346.806l-.11.52h3.774l.11-.52c-1.06-.095-1.129-.211-1.006-.806z"/>
          </svg>
        </button>

        <button id="bold-button" class="hover:bg-gray-200 p-4">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-type-bold" viewBox="0 0 16 16">
            <path d="M8.21 13c2.106 0 3.412-1.087 3.412-2.823 0-1.306-.984-2.283-2.164-2.386v-.055a2.176 2.176 0 0 0 1.852-2.14c0-1.51-1.162-2.46-3.014-2.46H3.843V13H8.21zM5.908 4.674h1.696c.963 0 1.517.451 1.517 1.244 0 .834-.629 1.16-1.73 1.16H5.908V4.673zm0 6.788V8.598h1.73c1.217 0 1.88.492 1.88 1.415 0 .943-.643 1.449-1.816 1.449H5.907z"/>
          </svg>
        </button>

        <button id="code-button" class="hover:bg-gray-200 p-4">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-code" viewBox="0 0 16 16">
            <path d="M5.854 4.854a.5.5 0 1 0-.708-.708l-3.5 3.5a.5.5 0 0 0 0 .708l3.5 3.5a.5.5 0 0 0 .708-.708L2.707 8l3.147-3.146zm4.292 0a.5.5 0 0 1 .708-.708l3.5 3.5a.5.5 0 0 1 0 .708l-3.5 3.5a.5.5 0 0 1-.708-.708L13.293 8l-3.147-3.146z"/>
          </svg>
        </button>

        <button id="c1-button" class="hover:bg-gray-200 p-1">
          {{c1::}}
        </button>

        <button id="c2-button" class="hover:bg-gray-200 p-1">
          {{c2::}}
        </button>

        <button id="anki-note-button" class="hover:bg-gray-200 p-2">
          [[]]
        </button>

      </div>

      <%= f.text_area :content, class: "block w-full h-96 min-h-full resize-none", id: "markdown-editor" %>

      <%= f.hidden_field :parent_id, value: "#{@parent_article ? @parent_article.id : nil}" %>

      <%= f.submit class: "p-2 bg-blue-600 text-white rounded-md shadow-md hover:bg-blue-700 hover:shadow-lg" %>
    <% end %>
  </section>

  
  <section class="bg-white border border-black shadow-md rounded-md m-4 p-4" id="preview">
    
  </section>
  
</div>

<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script defer>
try {
const ankiExtension = {
  name: 'ankiNote',
  level: 'inline',
  start(src) { return src.match(/\[\[/)?.index; },
  tokenizer(src, tokens) {
    const rule = /^\[\[.*?\]\]/;
    const match = rule.exec(src);
    if (match) {
      return {
        type: 'ankiNote',
        raw: match[0],
        text: match[0].replace('[[', '').replace(']]', '').replace(/{{c\d::(.*?)}}/g, "<span class='ankiCloze'>$1</span>"),
        tokens: []
      };
    }
  },
  renderer(token) {
    return `<span class="ankiNote">${token.text}</span>`;
  }
};

marked.use({ extensions: [ankiExtension] });

} catch (error) { 
    console.log(error)
} 
</script>

<script defer>
try {
  const textArea = document.querySelector("#markdown-editor");
  const preview = document.querySelector("#preview");
  const updatePreviewButton = document.querySelector("#update-preview-button");

  function updatePreview(){
    preview.innerHTML = marked.parse(textArea.value);
  }
  updatePreview();

  updatePreviewButton.addEventListener('click', function(event){
    event.preventDefault();
    updatePreview();
  });

  const header1Button = document.querySelector("#header-1-button");
  const header2Button = document.querySelector("#header-2-button");
  const header3Button = document.querySelector("#header-3-button");
  const italicizeButton = document.querySelector("#italicize-button");
  const boldButton = document.querySelector("#bold-button");
  const codeButton = document.querySelector("#code-button");

  const c1Button = document.querySelector("#c1-button");
  const c2Button = document.querySelector("#c2-button");
  const ankiNoteButton = document.querySelector("#anki-note-button");
  
  // writes text1 to the start of the selection and text2 at the end of the selection
  function writeTextToMarkdownEditor(text1, text2="") {
    let start = textArea.selectionStart;
    let end = textArea.selectionEnd;
    textArea.setRangeText(text1, start, start);
    textArea.setRangeText(text2, end+text1.length, end+text1.length, 'end');
    textArea.focus();
  }

  // add click event lister to button which calls writeTextToMarkdownEditor
  function addClickEventToMarkdownEditorButton(button, text1, text2=""){
    button.addEventListener('click', function(event){
      event.preventDefault();
      writeTextToMarkdownEditor(text1, text2);
    })
  }

  addClickEventToMarkdownEditorButton(header1Button, "# ");
  addClickEventToMarkdownEditorButton(header2Button, "## ");
  addClickEventToMarkdownEditorButton(header3Button, "### ");
  addClickEventToMarkdownEditorButton(italicizeButton, "*", "*");
  addClickEventToMarkdownEditorButton(boldButton, "**", "**");
  addClickEventToMarkdownEditorButton(codeButton, "`", "`");
  addClickEventToMarkdownEditorButton(c1Button, "{{c1::", "}}")
  addClickEventToMarkdownEditorButton(c2Button, "{{c2::", "}}")
  addClickEventToMarkdownEditorButton(ankiNoteButton, "[[", "]]")
  
} catch (error) {
  console.log(error);
}
</script>